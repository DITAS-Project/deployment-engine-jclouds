---

#  - name: Run docker and kubernetes deployment
#    become: yes
#    hosts: all
#    roles:
#     - role: pre-deploy

  - hosts: [all]
    become: yes
    tasks:
      - name: set hostname
        hostname:
          name: "{{ inventory_hostname }}"

      - name: generate /etc/hosts file
        template: 
          src: hosts.j2
          dest: /etc/hosts
          owner: root 
          group: root 
          mode: 0644

  - hosts: [master]
    become: yes
    tasks:
      - name: Create data partition
        parted: 
          device: /dev/vdb
          number: 1
          state: present

      - name: Format data partition
        filesystem:
          fstype: ext4
          dev: /dev/vdb1
      
      - name: Mount data partition
        mount:
          path: /mnt/data
          src: /dev/vdb1
          fstype: ext4
          state: mounted

      - name: Create NFS export directory
        file:
          path: /etc/exports.d
          state: directory
          mode: "a+rw"

      - name: using kubernetes init and gathering output info
        shell: kubeadm init --pod-network-cidr 10.244.0.0/16 | grep "kubeadm join"
        register: kube_join

      - name: setting variable to join other nodes
        set_fact: join_command="{{ kube_join.stdout }}"

  - hosts: [master]
    gather_facts: no
    tasks:

      - name: create .kube directory
        file:
          path: $HOME/.kube
          state: directory
          mode: 0755

      - name: copy admin.conf to user's kube config
        become: yes
        become_user: root
        become_method: sudo
        copy:
          src: /etc/kubernetes/admin.conf
          dest: /home/{{ masterUsername }}/.kube/config
          remote_src: yes
          owner: "{{ masterUsername }}"

      - name: copy flannel file
        copy:
          src: kube-flannel.yml
          dest: kube-flannel.yml

      - name: installing flannel and allowing access to cluster
        shell: kubectl apply -f kube-flannel.yml
      
      - name: taint cluster to allow pod deployments on master
        shell: kubectl taint nodes --all node-role.kubernetes.io/master-
      
      - name: getting slaves join command
        debug: msg={{ kube_join.stdout }}
        when: "'kubeadm join' in kube_join.stdout"

  - hosts: [slaves]
    become: yes
    gather_facts: no
    tasks:
      - name: joining nodes to cluster
        command: "{{ hostvars[groups['master'][0]]['join_command'] }}"

  - hosts: localhost
    tasks:
      - name: final
        debug:
          msg:
          - "Job done! You can now access cluster from master node! Now you can connect with:"
          - ssh {{ hostvars[groups['master'][0]]['ansible_user'] }}@{{ hostvars[groups['master'][0]]['ansible_host'] }}
          - ssh {{ hostvars[groups['slaves'][0]]['ansible_user'] }}@{{ hostvars[groups['slaves'][0]]['ansible_host'] }}
          - "For more machines refer to inventory file"
          - --------------------------
          - "You can use next commands now to check cluster status:"
          - kubectl get nodes -o wide
          - kubectl get pods --all-namespaces
          - kubectl cluster-info
          - --------------------------
